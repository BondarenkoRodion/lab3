class Ingredient:
    def __init__(self):
        pass


class Cheese(Ingredient):
    def __init__(self):
        pass


class Tomato(Ingredient):
    def __init__(self):
        pass


class Mushrooms(Ingredient):
    def __init__(self):
        pass


class Sauce(Ingredient):
    def __init__(self):
        pass


class Pepper(Ingredient):
    def __init__(self):
        pass


class Spinach(Ingredient):
    def __init__(self):
        pass


class PizzaBase:
    def __init__(self):
        self.ingredients = []

    def add_ingredient(self, ingredient):
        if isinstance(ingredient, Ingredient):
            self.ingredients.append(ingredient)
        else:
            raise Exception("ingredient must be fo type Ingredient")


class Pizza1(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Tomato())
        self.add_ingredient(Cheese())


class Pizza2(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Tomato())
        self.add_ingredient(Pepper())


class Pizza3(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Tomato())
        self.add_ingredient(Mushrooms())
        self.add_ingredient(Sauce())
        self.add_ingredient(Pepper())
        self.add_ingredient(Spinach())


class Pizza4(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Sauce())
        self.add_ingredient(Spinach())


class Pizza5(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Tomato())
        self.add_ingredient(Mushrooms())
        self.add_ingredient(Pepper())
        self.add_ingredient(Spinach())


class Pizza6(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Tomato())
        self.add_ingredient(Sauce())


class Pizza7(PizzaBase):
    def __init__(self):
        super().__init__()
        self.add_ingredient(Cheese())
        self.add_ingredient(Sauce())
        self.add_ingredient(Spinach())
        

def pizza_of_the_day(day):
    if not (isinstance(day, int) and 1 <= day <= 7):
        raise Exception("day must be an int in range 1 to 7")
    elif day == 1:
        return Pizza1()
    elif day == 2:
        return Pizza2()
    elif day == 3:
        return Pizza3()
    elif day == 4:
        return Pizza4()
    elif day == 5:
        return Pizza5()
    elif day == 6:
        return Pizza6()
    else:
        return Pizza7()


p = pizza_of_the_day(4)
p.add_ingredient(Tomato())

